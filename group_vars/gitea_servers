---

########################################################################
#                                                                      #
# Playbook                                                             #
#                                                                      #
########################################################################

# Controls whether to install Docker or not
# Also see `devture_docker_sdk_for_python_installation_enabled`.
gitea_playbook_docker_installation_enabled: true

# Controls whether to run the Traefik role or not
# See the `com.devture.ansible.role.traefik` section below for role configuration.
#
# There's a difference between `devture_traefik_enabled` and `gitea_playbook_traefik_role_enabled`.
# `devture_traefik_enabled` controls what the Traefik role would do - when not enabled, it will run uninstall tasks, etc.
# `gitea_playbook_traefik_role_enabled` controls if the Traefik role would even run at all.
#
# Sometimes, you're installing Traefik via a different (related playbook) which uses the same role.
# In such cases, you'd like to disable the role in this playbook from bothering with Traefik at all (`gitea_playbook_traefik_role_enabled: false`).
# If you used `devture_traefik_enabled: false` + `gitea_playbook_traefik_role_enabled: true` instead, you'd see the Treafik role here
# try to delete Traefik data (`/devture-traefik`) installed by the other playbook.
gitea_playbook_traefik_role_enabled: true

# Controls whether to attach Traefik labels to services.
# This is separate from `devture_traefik_enabled` and `gitea_playbook_traefik_role_enabled`,
# because you may wish to disable Traefik installation by the playbook, yet still use Traefik
# installed in another way.
gitea_playbook_traefik_labels_enabled: true

# Controls the additional network that reverse-proxyable services will be connected to.
gitea_playbook_reverse_proxyable_services_additional_network: "{{ devture_traefik_container_network if devture_traefik_enabled else '' }}"

########################################################################
#                                                                      #
# /Playbook                                                            #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.systemd_service_manager                     #
#                                                                      #
########################################################################

devture_systemd_service_manager_services_list_auto: |
  {{
    ([{'name': 'gitea-gitea.service', 'priority': 1000, 'groups': ['gitea', 'gitea-server']}])
    +
    ([{'name': 'gitea-backup.timer', 'priority': 2500, 'groups': ['gitea', 'gitea-backup']}] if gitea_backup_enabled else [])
    +
    ([{'name': (devture_postgres_identifier + '.service'), 'priority': 500, 'groups': ['gitea', 'postgres']}] if devture_postgres_enabled else [])
    +
    ([{'name': (devture_postgres_backup_identifier + '.service'), 'priority': 5000, 'groups': ['gitea', 'backup', 'postgres-backup']}] if devture_postgres_backup_enabled else [])
    +
    ([{'name': (devture_woodpecker_ci_server_identifier + '.service'), 'priority': 4000, 'groups': ['woodpecker', 'ci', 'ci-server']}] if devture_woodpecker_ci_server_enabled else [])
    +
    ([{'name': (devture_woodpecker_ci_agent_identifier + '.service'), 'priority': 4100, 'groups': ['woodpecker', 'ci', 'ci-agent']}] if devture_woodpecker_ci_agent_enabled else [])
    +
    ([{'name': 'devture-traefik.service', 'priority': 3000, 'groups': ['gitea', 'traefik', 'reverse-proxies']}] if gitea_playbook_traefik_role_enabled else [])
  }}

########################################################################
#                                                                      #
# /com.devture.ansible.role.systemd_service_manager                    #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# gitea                                                                #
#                                                                      #
########################################################################

gitea_gitea_systemd_required_systemd_services_list: |
  {{
    (['docker.service'])
    +
    ([devture_postgres_identifier ~ '.service'] if devture_postgres_enabled else [])
  }}

gitea_gitea_container_additional_networks: "{{ [gitea_playbook_reverse_proxyable_services_additional_network] if gitea_playbook_reverse_proxyable_services_additional_network else [] }}"

gitea_gitea_container_labels_traefik_enabled: "{{ gitea_playbook_traefik_labels_enabled }}"
gitea_gitea_container_labels_traefik_docker_network: "{{ gitea_playbook_reverse_proxyable_services_additional_network }}"

gitea_gitea_config_database_hostname: "{{ devture_postgres_identifier if devture_postgres_enabled else '' }}"
gitea_gitea_config_database_port: "{{ '5432' if devture_postgres_enabled else '' }}"
gitea_gitea_config_database_username: "gitea"
gitea_gitea_config_database_password: "{{ '%s' | format(gitea_generic_secret_key) | password_hash('sha512', 'db.gitea', rounds=655555) | to_uuid }}"

########################################################################
#                                                                      #
# /gitea                                                               #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# gitea_backup                                                         #
#                                                                      #
########################################################################

gitea_backup_enabled: false

gitea_backup_paths_to_backup: "{{ [gitea_base_path] }}"

gitea_backup_paths_to_exclude_auto: |
  {{
    (
      [gitea_backup_data_path + '/gitea-latest-backup.tar.gpg']
    )
    +
    ([
      devture_postgres_base_path
    ] if devture_postgres_enabled else [])
    +
    ([
      devture_postgres_backup_base_path
    ] if devture_postgres_backup_enabled else [])
  }}

########################################################################
#                                                                      #
# /gitea_backup                                                        #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# woodpecker-ci-server                                                 #
#                                                                      #
########################################################################

devture_woodpecker_ci_server_enabled: false

devture_woodpecker_ci_server_identifier: gitea-woodpecker-ci-server

devture_woodpecker_ci_server_uid: "{{ gitea_uid }}"
devture_woodpecker_ci_server_gid: "{{ gitea_gid }}"

devture_woodpecker_ci_server_base_path: "{{ gitea_base_path }}/woodpecker-ci/server"

devture_woodpecker_ci_server_systemd_required_systemd_services_list: |
  {{
    (['docker.service'])
    +
    ([devture_postgres_identifier ~ '.service'] if devture_postgres_enabled else [])
  }}

devture_woodpecker_ci_server_container_additional_networks: |
  {{
    (
      ([gitea_gitea_container_network])
      +
      ([devture_postgres_container_network] if devture_postgres_enabled else [])
      +
      ([gitea_playbook_reverse_proxyable_services_additional_network] if gitea_playbook_reverse_proxyable_services_additional_network else [])
    ) | unique
  }}


devture_woodpecker_ci_server_container_labels_traefik_enabled: "{{ gitea_playbook_traefik_labels_enabled }}"
devture_woodpecker_ci_server_container_labels_traefik_docker_network: "{{ gitea_playbook_reverse_proxyable_services_additional_network }}"

devture_woodpecker_ci_server_provider: gitea

# We must use the public URL here, because it's also used for login redirects
devture_woodpecker_ci_server_config_gitea_url: "https://{{ gitea_server_fqn_gitea }}"

devture_woodpecker_ci_server_container_add_host_domain_name: "{{ gitea_server_fqn_gitea }}"
devture_woodpecker_ci_server_container_add_host_ip_address: "{{ ansible_host }}"

devture_woodpecker_ci_server_database_driver: postgres
devture_woodpecker_ci_server_database_datasource: "postgres://{{ devture_woodpecker_ci_server_database_datasource_username }}:{{ devture_woodpecker_ci_server_database_datasource_password }}@{{ devture_woodpecker_ci_server_database_datasource_hostname }}:{{ devture_woodpecker_ci_server_database_datasource_port }}/{{ devture_woodpecker_ci_server_database_datasource_db_name }}?sslmode=disable"

devture_woodpecker_ci_server_database_datasource_hostname: "{{ devture_postgres_identifier if devture_postgres_enabled else '' }}"
devture_woodpecker_ci_server_database_datasource_port: "{{ '5432' if devture_postgres_enabled else '' }}"
devture_woodpecker_ci_server_database_datasource_username: woodpecker_ci_server
devture_woodpecker_ci_server_database_datasource_password: "{{ '%s' | format(gitea_generic_secret_key) | password_hash('sha512', 'woodpecker.ci', rounds=655555) | to_uuid }}"
devture_woodpecker_ci_server_database_datasource_db_name: woodpecker_ci_server

########################################################################
#                                                                      #
# /woodpecker-ci-server                                                #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# woodpecker-ci-agent                                                  #
#                                                                      #
########################################################################

devture_woodpecker_ci_agent_enabled: false

devture_woodpecker_ci_agent_identifier: gitea-woodpecker-ci-agent

devture_woodpecker_ci_agent_uid: "{{ gitea_uid }}"
devture_woodpecker_ci_agent_gid: "{{ gitea_gid }}"

devture_woodpecker_ci_agent_base_path: "{{ gitea_base_path }}/woodpecker-ci/agent"

devture_woodpecker_ci_agent_systemd_required_systemd_services_list: |
  {{
    (['docker.service'])
    +
    ([devture_woodpecker_ci_server_identifier ~ '.service'] if devture_woodpecker_ci_server_enabled else [])
  }}

devture_woodpecker_ci_agent_container_additional_networks: |
  {{
    (
      ([devture_woodpecker_ci_server_container_network] if devture_woodpecker_ci_server_enabled and devture_woodpecker_ci_server_container_network != devture_woodpecker_ci_agent_container_network else [])
    ) | unique
  }}

devture_woodpecker_ci_agent_config_server: "{{ (devture_woodpecker_ci_server_identifier + ':' + devture_woodpecker_ci_server_config_grpc_addr_port | string) if devture_woodpecker_ci_agent_enabled else '' }}"

devture_woodpecker_ci_agent_config_agent_secret: "{{ devture_woodpecker_ci_server_config_agent_secret if devture_woodpecker_ci_agent_enabled else '' }}"

########################################################################
#                                                                      #
# /woodpecker-ci-agent                                                 #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.postgres                                    #
#                                                                      #
########################################################################

# To completely disable installing Postgres, use `devture_postgres_enabled: false`.

devture_postgres_identifier: gitea-postgres

devture_postgres_architecture: "{{ gitea_architecture }}"

devture_postgres_base_path: "{{ gitea_base_path }}/postgres"

devture_postgres_container_network: "{{ gitea_container_network }}"

devture_postgres_uid: "{{ gitea_uid }}"
devture_postgres_gid: "{{ gitea_gid }}"

devture_postgres_systemd_services_to_stop_for_maintenance_list: |
  {{
    (['gitea-gitea.service'])
  }}

devture_postgres_managed_databases_auto: |
  {{
    [{
      'name': gitea_gitea_config_database_name,
      'username': gitea_gitea_config_database_username,
      'password': gitea_gitea_config_database_password,
    }]
    +
    ([{
      'name': devture_woodpecker_ci_server_database_datasource_db_name,
      'username': devture_woodpecker_ci_server_database_datasource_username,
      'password': devture_woodpecker_ci_server_database_datasource_password,
    }] if devture_woodpecker_ci_server_enabled else [])
  }}

########################################################################
#                                                                      #
# /com.devture.ansible.role.postgres                                   #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.postgres_backup                             #
#                                                                      #
########################################################################

devture_postgres_backup_enabled: false

devture_postgres_backup_identifier: gitea-postgres-backup

devture_postgres_backup_architecture: "{{ gitea_architecture }}"

devture_postgres_backup_base_path: "{{ gitea_base_path }}/postgres-backup"

devture_postgres_backup_systemd_required_services_list: |
  {{
    (['docker.service'])
    +
    ([(devture_postgres_identifier + '.service')] if devture_postgres_enabled else [])
  }}

devture_postgres_backup_container_network: "{{ gitea_container_network }}"

devture_postgres_backup_uid: "{{ gitea_uid }}"
devture_postgres_backup_gid: "{{ gitea_gid }}"

devture_postgres_backup_connection_hostname: "{{ devture_postgres_connection_hostname if devture_postgres_enabled else '' }}"
devture_postgres_backup_connection_port: "{{ devture_postgres_connection_port if devture_postgres_enabled else 5432 }}"
devture_postgres_backup_connection_username: "{{ devture_postgres_connection_username if devture_postgres_enabled else '' }}"
devture_postgres_backup_connection_password: "{{ devture_postgres_connection_password if devture_postgres_enabled else '' }}"

devture_postgres_backup_postgres_data_path: "{{ devture_postgres_data_path if devture_postgres_enabled else '' }}"

devture_postgres_backup_databases: "{{ devture_postgres_managed_databases | map(attribute='name') if devture_postgres_enabled else [] }}"

########################################################################
#                                                                      #
# /com.devture.ansible.role.postgres_backup                            #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.playbook_state_preserver                    #
#                                                                      #
########################################################################

# To completely disable this feature, use `devture_playbook_state_preserver_enabled: false`.

devture_playbook_state_preserver_uid: "{{ gitea_uid }}"
devture_playbook_state_preserver_gid: "{{ gitea_gid }}"

devture_playbook_state_preserver_vars_preservation_dst: "{{ gitea_base_path }}/vars.yml"

devture_playbook_state_preserver_commit_hash_preservation_dst: "{{ gitea_base_path }}/git_hash.yml"

########################################################################
#                                                                      #
# /com.devture.ansible.role.playbook_state_preserver                   #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.traefik                                     #
#                                                                      #
########################################################################

# To completely disable the Traefik role from running, use `gitea_playbook_traefik_role_enabled: false`.
# See the comment there for more details about why we have both `devture_traefik_enabled` and `gitea_playbook_traefik_role_enabled`.
devture_traefik_enabled: "{{ gitea_playbook_traefik_role_enabled }}"

devture_traefik_uid: "{{ gitea_uid }}"
devture_traefik_gid: "{{ gitea_gid }}"

########################################################################
#                                                                      #
# /com.devture.ansible.role.traefik                                    #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.docker_sdk_for_python                       #
#                                                                      #
########################################################################

# To completely disable installing the Docker SDK for Python, use `devture_docker_sdk_for_python_installation_enabled: false`.

########################################################################
#                                                                      #
# /com.devture.ansible.role.docker_sdk_for_python                      #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.timesync                                    #
#                                                                      #
########################################################################

# To completely disable installing systemd-timesyncd/ntpd, use `devture_timesync_installation_enabled: false`.

########################################################################
#                                                                      #
# /com.devture.ansible.role.timesync                                   #
#                                                                      #
########################################################################
